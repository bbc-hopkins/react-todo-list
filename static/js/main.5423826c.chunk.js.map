{"version":3,"sources":["components/TodoEdit.jsx","components/Todo.jsx","components/TodoForm.jsx","components/TodoHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["FormDialog","todo","emitNewTodo","useState","open","setOpen","title","editValue","setEditValue","handleClose","IconButton","aria-label","onClick","Dialog","onClose","aria-labelledby","maxWidth","fullWidth","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","type","value","onChange","e","target","DialogActions","Button","color","Todo","deleteTodo","todoTitle","setTodoTitle","className","TodoEdit","TodoForm","state","inputValue","isInvalid","addTodo","preventDefault","trim","setState","Math","random","props","emitInputValue","handleInputChange","this","Fragment","Form","Group","controlId","Control","placeholder","Text","variant","Component","TodoHeader","App","todos","setTodos","filter","src","alt","childData","length","map","container","charAt","toUpperCase","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5423826c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PencilIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst FormDialog = ({ todo, emitNewTodo }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [editValue, setEditValue] = useState(todo.title);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    emitNewTodo(editValue);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setEditValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label='delete' onClick={handleClickOpen}>\r\n        <PencilIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='form-dialog-title'\r\n        maxWidth='sm'\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id='form-dialog-title'>Todo editing!</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin='dense'\r\n            id='name'\r\n            label='Re-enter your new todo below'\r\n            type='text'\r\n            fullWidth\r\n            value={editValue}\r\n            onChange={handleInput}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEdit} color='primary'>\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialog;\r\n","import React, { useState } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TodoEdit from './TodoEdit';\r\n\r\nconst Todo = ({ todo, deleteTodo }) => {\r\n  const [todoTitle, setTodoTitle] = useState(todo.title);\r\n\r\n  const emitNewTodo = (value) => {\r\n    setTodoTitle(value);\r\n  };\r\n\r\n  return (\r\n    <div className='todo-item'>\r\n      {todoTitle}\r\n      <span className='todo-btns'>\r\n        <TodoEdit todo={todo} emitNewTodo={emitNewTodo} />\r\n        <IconButton aria-label='delete' onClick={() => deleteTodo(todo.id)}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass TodoForm extends Component {\r\n  state = {\r\n    inputValue: '',\r\n    id: 999,\r\n    isInvalid: false,\r\n  };\r\n\r\n  addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.inputValue.trim() === '') {\r\n      this.setState({ isInvalid: true });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isInvalid: false });\r\n    const todo = {\r\n      id: Math.random() * 1000,\r\n      title: this.state.inputValue,\r\n    };\r\n\r\n    this.setState({ inputValue: '' });\r\n    this.props.emitInputValue(todo);\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let { inputValue } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Form className='todo-form'>\r\n          <Form.Group controlId='formBasicEmail' className='todo-input'>\r\n            <Form.Control\r\n              className='input'\r\n              type='text'\r\n              placeholder='New todo :)'\r\n              value={inputValue}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            {this.state.isInvalid && (\r\n              <Form.Text className='is-invalid'>\r\n                Please enter valid todo !!!\r\n              </Form.Text>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <Button\r\n            variant='secondary'\r\n            className='submit-btn'\r\n            type='submit'\r\n            onClick={this.addTodo}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\n\r\nfunction TodoHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className='todos-header'>Funny Todo List</h1>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoHeader;\r\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport Todo from './components/Todo';\n// import TodoEdit from './components/TodoEdit';\nimport TodoForm from './components/TodoForm';\nimport TodoHeader from './components/TodoHeader';\n\nfunction App() {\n  const img = 'https://picsum.photos/200';\n  const [todos, setTodos] = useState([]);\n\n  const formattedTodos = () => {\n    const fTodos = todos.map((todo) => {\n      const container = {};\n      container.title =\n        todo.title.charAt(0).toUpperCase() + todo.title.slice(1);\n      container.id = todo.id;\n      return container;\n    });\n    return fTodos;\n  };\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const renderTags = () => {\n    if (todos.length === 0)\n      return <code className='empty-list'>Oops, there is no todos :) </code>;\n\n    return (\n      <ul className='todos-list'>\n        {formattedTodos().map((todo) => (\n          <li key={todo.id}>\n            <Todo todo={todo} deleteTodo={deleteTodo} />\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const getInputValue = (childData) => {\n    setTodos([...todos, childData]);\n  };\n\n  return (\n    <div className='todos-wrapper'>\n      <TodoHeader />\n      <div className='thumbnail'>\n        <img src={img} alt='img' className='image' />\n      </div>\n      <TodoForm emitInputValue={getInputValue} />\n      {renderTags()}\n      {todos.length === 0 && 'Please create new todo!'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}